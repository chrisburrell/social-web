<!-- The Parent POM sets up the depenceny management for all plugins and 
	third party dependencies. It also sets up plugin defaults, such as compiler 
	jdk target version, etc. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>uk.me.burrell.social</groupId>
	<artifactId>social-parent</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>Social and Personalisation :: Parent POM</name>

	<properties>
		<project.build.sourceEncoding>iso-8859-1</project.build.sourceEncoding>
		<project.reporting.outputEncoding>iso-8859-1</project.reporting.outputEncoding>
		<java.version>1.6</java.version>

		<!-- Set up JUnit to run in parallel, at the method level to ensure fast 
			build times -->
		<junit.parallel>method</junit.parallel>
		<junit.threads>4</junit.threads>


		<!-- Java libraries -->
		<persistence-api.version>1.0.2</persistence-api.version>
		<servlet-api.version>2.5</servlet-api.version>

		<!-- Third party libraries -->
		<org.slf4j.version>1.6.4</org.slf4j.version>
		<spring.version>3.1.1.RELEASE</spring.version>
		<hibernate.version>4.1.2.Final</hibernate.version>
		<jackson.version>1.9.6</jackson.version>
		<h2.version>1.3.166</h2.version>
		<commons-dbcp.version>1.4</commons-dbcp.version>
		<commons-lang.version>2.6</commons-lang.version>
		<ehcache.version>2.5.2</ehcache.version>

		<!-- Test dependency versions -->
		<junit.version>4.10</junit.version>
		<rest-assured.version>1.6.1</rest-assured.version>
		<mockito.version>1.9.0</mockito.version>

		<!-- Maven plugin versions -->
		<maven-failsafe.version>2.12</maven-failsafe.version>
		<maven-clean.version>2.4.1</maven-clean.version>
		<maven-compiler.version>2.4</maven-compiler.version>
		<maven-surefire.version>2.12</maven-surefire.version>
		<maven-eclipse.version>2.9</maven-eclipse.version>
		<maven-jar.version>2.2</maven-jar.version>
		<maven-cobertura.version>2.5.1</maven-cobertura.version>
		<maven-javadoc.version>2.8.1</maven-javadoc.version>
		<maven-cargo.version>1.2.1</maven-cargo.version>
		<maven-checkstyle.version>2.9.1</maven-checkstyle.version>
		<maven-findbugs.version>2.4.0</maven-findbugs.version>

		<!-- other properties -->
		<skipCoverage>false</skipCoverage>
	</properties>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/chrisburrell/social-web/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
		<url>https://social-web.ci.cloudbees.com/</url>
	</ciManagement>

	<scm>
		<connection>scm:git:git://github.com/chrisburrell/social-web.git</connection>
		<url>https://github.com/chrisburrell/social-web</url>
	</scm>

	<distributionManagement>
		<site>
			<id>social</id>
			<url>file://project.build.directory/site-deployment</url>
		</site>
	</distributionManagement>

	<developers>
		<developer>
			<id>Chris Burrell</id>
			<email>chris@burrell.me.uk</email>
		</developer>
	</developers>

	<dependencyManagement>
		<dependencies>
			<!-- Dependencies on this project -->
			<dependency>
				<groupId>uk.me.burrell.social</groupId>
				<artifactId>social-service</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>uk.me.burrell.social</groupId>
				<artifactId>social-service</artifactId>
				<type>test-jar</type>
				<scope>test</scope>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>uk.me.burrell.social</groupId>
				<artifactId>social-models</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${org.slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${org.slf4j.version}</version>
				<scope>runtime</scope>
			</dependency>

			<!-- JSRs -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>${persistence-api.version}</version>
			</dependency>

			<!-- Spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Enterprise cache framework -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-core</artifactId>
				<version>${ehcache.version}</version>
			</dependency>

			<!-- Hibernate -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>${commons-dbcp.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
			</dependency>

			<!-- Jackson JSON Mapper -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>

			<!-- Test depedencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.jayway.restassured</groupId>
				<artifactId>rest-assured</artifactId>
				<version>${rest-assured.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- All projects should use JUnit and Mockito as test dependencies. We 
			won't accept code with no tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>

		<!-- We also intend that all modules will log! -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
	</dependencies>

	<organization>
		<name>Social and Personalisation Corp.</name>
		<url>https://github.com/chrisburrell/social-web</url>
	</organization>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire.version}</version>
					<configuration>
						<junitArtifactName>junit:junit-dep</junitArtifactName>
						<parallel>${junit.parallel}</parallel>
						<threadCount>${junit.threads}</threadCount>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>${maven-surefire.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar.version}</version>
				</plugin>

				<!-- Sets up eclipse formatters, save actions, Findbugs, checkstyle, 
					PMD, etc. -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>false</downloadJavadocs>
						<wtpversion>2.0</wtpversion>

						<additionalProjectnatures>
							<projectnature>net.sourceforge.pmd.eclipse.plugin.pmdNature
							</projectnature>
							<projectnature>net.sf.eclipsecs.core.CheckstyleNature
							</projectnature>
							<projectnature>edu.umd.cs.findbugs.plugin.eclipse.findbugsNature
							</projectnature>
							<projectnature>org.maven.ide.eclipse.maven2Nature</projectnature>
						</additionalProjectnatures>
						<additionalBuildcommands>
							<buildcommand>net.sourceforge.pmd.eclipse.plugin.pmdBuilder
							</buildcommand>
							<buildcommand>edu.umd.cs.findbugs.plugin.eclipse.findbugsBuilder
							</buildcommand>
							<buildcommand>net.sf.eclipsecs.core.CheckstyleBuilder
							</buildcommand>
							<buildcommand>org.maven.ide.eclipse.maven2Builder</buildcommand>
						</additionalBuildcommands>

						<!-- A default eclipse configuration for Eclipse has been configured. 
							The following section sets up these elements -->
						<additionalConfig>
							<file>
								<name>.settings/org.eclipse.jdt.core.prefs</name>
								<location>/eclipse/org.eclipse.jdt.core.prefs</location>
							</file>
							<file>
								<name>.settings/org.eclipse.jdt.ui.prefs</name>
								<location>/eclipse/org.eclipse.jdt.ui.prefs</location>
							</file>
							<file>
								<name>.settings/org.eclipse.wst.validation.prefs</name>
								<location>/eclipse/org.eclipse.wst.validation.prefs</location>
							</file>
							<file>
								<name>.checkstyle</name>
								<location>/eclipse/.checkstyle</location>
							</file>
							<file>
								<name>.checkstyle.config.xml</name>
								<location>/checkstyle/checkstyle.xml</location>
							</file>
							<file>
								<name>.checkstyle.config.test.xml</name>
								<location>/checkstyle/checkstyle.test.xml</location>
							</file>
							<file>
								<name>.pmd</name>
								<location>/eclipse/pmd.xml</location>
							</file>
							<file>
								<name>.fbprefs</name>
								<location>/eclipse/.fbprefs</location>
							</file>
							<file>
								<name>fb-filter.xml</name>
								<location>/eclipse/fb-filter.xml</location>
							</file>
						</additionalConfig>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>uk.me.burrell.social</groupId>
							<artifactId>social-build</artifactId>
							<version>${project.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- By default, we require 80% branch and line coverage -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${maven-cobertura.version}</version>
					<configuration>
						<skip>${skipCoverage}</skip>
						<check>
							<branchRate>80</branchRate>
							<lineRate>80</lineRate>
							<haltOnFailure>true</haltOnFailure>
							<regexes>
								<regex>
									<!-- we lower the required coverage since there are a number of 
										handlers, mainly configured via annotation -->
									<pattern>uk.me.burrell.social.api.impl.SocialRestAPIImpl</pattern>
									<branchRate>80</branchRate>
									<lineRate>65</lineRate>
								</regex>
							</regexes>
						</check>
						<instrumentation>
							<!-- exclude by default since they will necessarily be executed as 
								part of every service layer and REST layer tests anyway -->
							<excludes>
								<exclude>uk/me/burrell/social/api/models/**/*.class</exclude>
							</excludes>
						</instrumentation>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${maven-cargo.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- by default, we enforce code coverage for all modules in the build -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>clean</goal>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc.version}</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
		</plugins>
	</reporting>
</project>
